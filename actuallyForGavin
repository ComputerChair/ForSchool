import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
public class Tester
{
    public static void main(String[] args) throws FileNotFoundException{
        League myGroup = new League(10);
        // Bowler b1 = new Bowler("Mickey Mouse", 120, 101, 55);
        // myGroup.addBowler(b1);
        // b1 = new Bowler("Minnie Mouse", 202, 12, 133);
        // myGroup.addBowler(b1);
        // b1 = new Bowler("Donald Duck", 122, 290, 202);
        // myGroup.addBowler(b1);
        // myGroup.writeToFile("Team1.txt");
        // System.out.println("printing my group");
        // System.out.println(myGroup);
        myGroup.fillFromFile("Team1.txt");
        System.out.println("Reading and printing info from file");
        // System.out.println(myGroup);
        Bowler b = new Bowler("Derpenshmeetz", 300, 300, 300);
        myGroup.addBowler(b);
        b = new Bowler("Booford", 250, 250, 300);
        myGroup.addBowler(b);
        System.out.println(myGroup);
        myGroup.writeToFile("Team1.txt");
    }
}

----------------------

import java.io.File;
import java.io.PrintWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
public class League
{
    private Bowler[] team;
    int size, index;
    //default constructor
    public League(){
        size = 50;
        index = 0;
        team = new Bowler[size];
    }
    //custom league with size predetermined
    public League(int size){
        this.size = size;
        index = 0;
        team = new Bowler[size];
    }
    //adds bowler to "team" (name for league array)
    public void addBowler(Bowler b){
        if(index >= size){ //only when need to double size
            doubleSize();
        }
        team[index] = b;
        index++;
    }
    //doubles size of the array
    public void doubleSize(){
        Bowler[] temp = new Bowler[2 * size];
        for(int x = 0; x < size; x++){
            temp[x] = team[x];
        }
        team = temp;
        size = 2 * size;
    }
    //writes contents of team to a file
    public void writeToFile(String fileName){
        Bowler b1;
        try{
            PrintWriter outFile = new PrintWriter(fileName);
            for(int i = 0; i < index; i++){
                b1 = team[i];
                outFile.println(b1.getName());
                outFile.println(b1.getScores());
            }
            outFile.close();
        }
        catch(IOException ex){
            System.out.println("Couldn't create and write to file.");
        }
    }
    //reads entire contents of file and stores to team
    public void fillFromFile(String fn){
        String name;
        int game1, game2, game3;
        try{
            File inputFile = new File(fn);
            Scanner input = new Scanner(inputFile);
            while(input.hasNextLine()){
                name = input.nextLine();
                game1 = input.nextInt();
                game2 = input.nextInt();
                game3 = input.nextInt();
                input.nextLine();
                Bowler b1 = new Bowler(name, game1, game2, game3);
                addBowler(b1);
            }
            input.close();
        }
        catch(IOException ex){
            System.out.println("could not find file to read from");
        }
    }
    public String toString(){
        String s = "";
        for(int x = 0; x < index; x++){
            s = s + team[x] + "\n";
        }
        return s;
    }
}

-----------------------

public class Bowler
{
    private String name;
    private int g1, g2, g3;
    public Bowler(String name, int g1, int g2, int g3){
        this.name = name;
        this.g1 =g1;
        this.g2 = g2;
        this.g3 = g3;
    }
    public double getAverage(){
        double average = (g1+g2+g3)/3.0;
        return average;
    }
    public String toString(){
        String s = "";
        s += "Name: " + name + " \n";
        s += "Games: " + g1 + ", " + g2 + ", " + g3 + "\n";
        s += "average: " + getAverage() + "\n";
        return s;
    }
    public String getName(){
        return name;
    }
    //this method is to return as string so it can be written to the file
    public String getScores(){
        return g1 + " " + g2 + " " + g3;
    }
}
